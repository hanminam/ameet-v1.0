* 전문가 에이전트 배심원단 구성 완료 화면 기능 수정사항

1. 사용자가 원하는 전문가 에이전트를 추가하는 기능
1) 기존의 전문가 에이전트 풀에서 검색 추가
2) 검색 결과 마음에 드는 에이전트가 없으면 사용자가 직접 전문가를 생성
3) 선정된 전문가 에이전트 중 맘에 들지 않는 에이전트를 사용자가 이번 토론에서 참가 배제 기능

2. 에이전트의 발언 길이를 배심원단 선정 화면에서 에이전트의 사용언어모델 콤보 밑에 슬라이드 UI로 최소 100자에서 2000자까지 설정하는 UI추가(기본값 200자)

* 화면 UI/UX 목업

<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AMEET - 배심원단 구성 (개선안)</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@400;500;700;900&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Noto Sans KR', sans-serif;
            background-color: #f0f4f8;
        }
        .screen-card {
            background-color: white;
            border-radius: 1.5rem;
            box-shadow: 0 10px_15px_-3px_rgba(0,0,0,0.07), 0_4px_6px_-2px_rgba(0,0,0,0.05);
            margin: 2rem auto;
            overflow: hidden;
        }
        .agent-card {
            background: white;
            border-radius: 1rem;
            padding: 1.5rem;
            text-align: center;
            box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
            transition: all 0.2s ease;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
        }
        .slider-container input[type="range"] {
            -webkit-appearance: none;
            width: 100%;
            height: 8px;
            background: #dbeafe;
            border-radius: 5px;
            outline: none;
        }
        .slider-container input[type="range"]::-webkit-slider-thumb {
            -webkit-appearance: none;
            appearance: none;
            width: 20px;
            height: 20px;
            background: #2563eb;
            cursor: pointer;
            border-radius: 50%;
        }
        .slider-container input[type="range"]::-moz-range-thumb {
            width: 20px;
            height: 20px;
            background: #2563eb;
            cursor: pointer;
            border-radius: 50%;
        }
        .modal {
            transition: opacity 0.3s ease;
        }
        .search-result-item:hover {
            background-color: #eff6ff;
        }
    </style>
</head>
<body class="p-4 md:p-8">

    <div class="max-w-7xl mx-auto">
        <header class="text-center mb-12">
            <h1 class="text-4xl md:text-5xl font-extrabold text-gray-800">
                <span class="text-blue-600">배심원단</span> 구성하기
            </h1>
            <p class="mt-4 text-lg text-gray-600 max-w-3xl mx-auto">AI가 제안한 전문가 팀을 확인하고, 필요에 맞게 직접 수정하여 최적의 토론을 시작하세요.</p>
        </header>

        <div class="screen-card">
            <div class="p-6 md:p-8">
                <div class="bg-amber-50 border-2 border-amber-400 p-4 rounded-xl flex flex-col sm:flex-row items-center gap-4 mb-8">
                    <span class="text-5xl">🧑‍⚖️</span>
                    <div class="text-center sm:text-left flex-grow">
                        <h3 class="text-lg font-bold text-amber-800">사회자</h3>
                        <p class="text-sm text-slate-600 mt-1">Gemini 2.5 Flash</p>
                    </div>
                    <p class="text-sm text-slate-500 text-center sm:text-right">토론의 전체 흐름을 관리하고, 사용자 개입을 조율하며, 토론 품질을 유지하는 핵심 역할을 수행합니다.</p>
                </div>

                <div class="flex justify-between items-center mb-6">
                    <h3 class="font-bold text-slate-700 text-xl">AI 전문가 에이전트</h3>
                    <button id="add-agent-btn" class="bg-blue-600 text-white font-bold py-2 px-4 rounded-lg hover:bg-blue-700 transition">＋ 전문가 추가하기</button>
                </div>
                
                <p class="text-center text-sm text-slate-500 mb-6">AI 추천 이유: 자율주행 기술의 다각적 분석을 위해 기술, 재무, 법률, HR, 그리고 비판적 관점의 전문가를 균형있게 배치했습니다.</p>
                
                <div id="jury-grid" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                    <!-- Agent Cards will be dynamically inserted here -->
                </div>

                <div class="mt-12 text-center">
                     <button id="start-debate-btn" class="w-full md:w-auto bg-blue-600 text-white font-bold py-4 px-8 rounded-lg text-xl hover:bg-blue-700 transition transform hover:scale-105">
                        이 구성으로 토론 시작하기
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Add Agent Modal -->
    <div id="add-agent-modal" class="modal fixed inset-0 bg-black bg-opacity-60 flex items-center justify-center p-4 hidden opacity-0 z-50">
        <div class="bg-white rounded-xl shadow-2xl w-full max-w-2xl max-h-[90vh] flex flex-col">
            <div class="p-4 border-b flex justify-between items-center">
                <h2 class="text-xl font-bold text-blue-800">전문가 에이전트 추가</h2>
                <button class="text-2xl font-bold" onclick="toggleModal('add-agent-modal')">&times;</button>
            </div>
            
            <!-- Search View -->
            <div id="agent-search-view" class="p-6 flex-grow overflow-y-auto">
                <p class="text-gray-600 mb-4">기존 전문가 풀에서 검색하여 추가하거나, 원하는 전문가가 없으면 직접 생성할 수 있습니다.</p>
                <div class="flex gap-2 mb-4">
                    <input type="text" id="agent-search-input" placeholder="전문가 이름 검색 (예: 경제)" class="w-full p-2 border-gray-300 border rounded-lg">
                    <button id="agent-search-btn" class="bg-gray-700 text-white font-bold py-2 px-6 rounded-lg hover:bg-gray-800">검색</button>
                </div>
                <div id="search-results-container" class="space-y-2 h-64 overflow-y-auto border rounded-lg p-2 bg-gray-50">
                    <p class="text-center text-gray-500 pt-4">검색어를 입력하세요.</p>
                </div>
                <div class="text-center mt-6">
                    <button id="show-create-view-btn" class="text-blue-600 font-semibold hover:underline">원하는 전문가가 없으신가요? 직접 생성하기 →</button>
                </div>
            </div>
            
            <!-- Create View -->
            <div id="agent-create-view" class="p-6 flex-grow overflow-y-auto hidden">
                <p class="text-gray-600 mb-4">새로운 전문가의 역할과 특징을 정의해주세요.</p>
                 <div class="space-y-4">
                    <div>
                        <label class="font-semibold text-gray-700">전문가 이름</label>
                        <input type="text" id="new-agent-name" placeholder="예: 미래 자동차 기술 전문가" class="w-full mt-1 p-2 border-gray-300 border rounded-lg">
                    </div>
                     <div>
                        <label class="font-semibold text-gray-700">아이콘 (Emoji)</label>
                        <input type="text" id="new-agent-icon" placeholder="예: 🚗" class="w-full mt-1 p-2 border-gray-300 border rounded-lg">
                    </div>
                    <div>
                        <label class="font-semibold text-gray-700">핵심 역할 (프롬프트)</label>
                        <textarea id="new-agent-prompt" rows="5" class="w-full mt-1 p-2 border-gray-300 border rounded-lg" placeholder="이 전문가가 어떤 관점에서, 어떤 역할을 수행해야 하는지 구체적으로 작성해주세요."></textarea>
                    </div>
                </div>
                 <div class="flex justify-end gap-4 mt-6">
                    <button id="back-to-search-btn" class="bg-gray-200 text-gray-800 font-bold py-2 px-6 rounded-lg hover:bg-gray-300">← 뒤로가기</button>
                    <button id="create-agent-btn" class="bg-blue-600 text-white font-bold py-2 px-6 rounded-lg hover:bg-blue-700">생성 및 추가</button>
                </div>
            </div>

        </div>
    </div>


    <script>
        // --- Mock Data ---
        const initialJury = [
            { name: "일론 머스크", icon: "🚀", role: "First Principles 기반", model: "gemini-2.5-flash" },
            { name: "재무 분석가", icon: "💹", role: "데이터 기반 분석", model: "gpt-4o" },
            { name: "한국 법률 전문가", icon: "⚖️", role: "법규 및 판례 중심", model: "claude-3-5-sonnet-20241022" },
            { name: "인사(HR) 전문가", icon: "👥", role: "조직 및 인력 관리", model: "gemini-2.5-flash" },
            { name: "비판적 관점", icon: "🤔", role: "논리적 허점 공격", model: "gpt-4o-mini" }
        ];

        const expertAgentPool = [
            { name: "거시경제 전문가", icon: "🌍", role: "거시 경제 동향 분석" },
            { name: "산업 분석가", icon: "🏭", role: "특정 산업 내부 트렌드 분석" },
            { name: "SNS 트렌드 분석가", icon: "📱", role: "소셜 미디어 여론 분석" },
            { name: "워렌 버핏", icon: "👴", role: "장기 가치 투자 관점" },
            { name: "스티브 잡스", icon: "💡", role: "제품, 디자인, 사용자 경험 관점" },
            { name: "심리학 전문가", icon: "🧠", role: "인간 행동 및 인지 편향 분석" },
            { name: "미래학자", icon: "🔭", role: "미래 기술 및 사회 변화 예측" },
            { name: "IT 전문가", icon: "💻", role: "IT 기술 및 산업 동향 분석" }
        ];

        const SUPPORTED_MODELS = {
            "Google (Gemini)": [{ id: "gemini-2.5-flash", name: "Gemini 2.5 Flash" }, { id: "gemini-2.5-pro", name: "Gemini 2.5 Pro" }],
            "OpenAI (GPT)": [{ id: "gpt-4o", name: "GPT-4o" }, { id: "gpt-4o-mini", name: "GPT-4o mini" }],
            "Anthropic (Claude)": [{ id: "claude-3-5-sonnet-20241022", name: "Claude 3.5 Sonnet" }]
        };
        
        // --- Functions ---

        /**
         * HTML ID로 사용하기 위해 문자열에서 공백과 특수문자를 제거합니다.
         * @param {string} name - 원본 문자열
         * @returns {string} - 변환된 문자열
         */
        function sanitizeForId(name) {
            return name.replace(/[^a-zA-Z0-9가-힣]/g, '-');
        }

        function toggleModal(modalId) {
            const modal = document.getElementById(modalId);
            if (modal.classList.contains('hidden')) {
                modal.classList.remove('hidden');
                setTimeout(() => modal.classList.remove('opacity-0'), 10);
            } else {
                modal.classList.add('opacity-0');
                setTimeout(() => modal.classList.add('hidden'), 300);
            }
        }

        function createModelSelector(agent) {
            let optionsHtml = '';
            for (const provider in SUPPORTED_MODELS) {
                optionsHtml += `<optgroup label="${provider}">`;
                SUPPORTED_MODELS[provider].forEach(model => {
                    const isSelected = model.id === agent.model ? 'selected' : '';
                    optionsHtml += `<option value="${model.id}" ${isSelected}>${model.name}</option>`;
                });
                optionsHtml += `</optgroup>`;
            }
            return `<select data-agent-name="${agent.name}" class="w-full mt-2 p-1 border-gray-300 border rounded-lg text-xs bg-white">${optionsHtml}</select>`;
        }

        function createAgentCard(agent) {
            const card = document.createElement('div');
            card.className = 'agent-card';
            const safeAgentName = sanitizeForId(agent.name); // ID 생성을 위해 이름 변환
            card.innerHTML = `
                <div>
                    <span class="text-5xl">${agent.icon}</span>
                    <h4 class="text-xl font-bold mt-2">${agent.name}</h4>
                    <p class="text-sm text-gray-500">${agent.role}</p>
                </div>
                <div class="mt-4 w-full">
                    ${createModelSelector(agent)}
                    <div class="slider-container mt-4">
                        <label for="length-slider-${safeAgentName}" class="text-xs font-medium text-gray-500 flex justify-between">
                            <span>발언 길이</span>
                            <span id="slider-value-${safeAgentName}" class="font-bold text-blue-600">200자</span>
                        </label>
                        <input type="range" id="length-slider-${safeAgentName}" min="100" max="2000" value="200" step="100" class="mt-1">
                    </div>
                </div>`;
            return card;
        }

        function renderJury(jury) {
            const grid = document.getElementById('jury-grid');
            grid.innerHTML = '';
            jury.forEach(agent => {
                const card = createAgentCard(agent);
                grid.appendChild(card);
                
                const safeAgentName = sanitizeForId(agent.name);
                const slider = card.querySelector(`#length-slider-${safeAgentName}`);
                const valueDisplay = card.querySelector(`#slider-value-${safeAgentName}`);

                if (slider && valueDisplay) {
                    slider.addEventListener('input', (e) => {
                        valueDisplay.textContent = `${e.target.value}자`;
                    });
                } else {
                     console.error(`Error: Could not find slider or value display for agent: ${agent.name}`);
                }
            });
        }
        
        function handleSearch() {
            const searchTerm = document.getElementById('agent-search-input').value.toLowerCase();
            const resultsContainer = document.getElementById('search-results-container');
            
            if (!searchTerm) {
                resultsContainer.innerHTML = '<p class="text-center text-gray-500 pt-4">검색어를 입력하세요.</p>';
                return;
            }

            const results = expertAgentPool.filter(agent => agent.name.toLowerCase().includes(searchTerm) || agent.role.toLowerCase().includes(searchTerm));

            if (results.length === 0) {
                 resultsContainer.innerHTML = '<p class="text-center text-gray-500 pt-4">검색 결과가 없습니다.</p>';
                 return;
            }

            resultsContainer.innerHTML = '';
            results.forEach(agent => {
                const item = document.createElement('div');
                item.className = 'search-result-item flex items-center justify-between p-3 rounded-lg cursor-pointer';
                item.innerHTML = `
                    <div class="flex items-center gap-3">
                        <span class="text-3xl">${agent.icon}</span>
                        <div>
                            <p class="font-bold">${agent.name}</p>
                            <p class="text-sm text-gray-500">${agent.role}</p>
                        </div>
                    </div>
                    <button class="add-searched-agent-btn bg-blue-100 text-blue-700 font-semibold text-sm py-1 px-3 rounded-full hover:bg-blue-200">추가</button>
                `;
                item.querySelector('.add-searched-agent-btn').addEventListener('click', (e) => {
                    e.stopPropagation();
                    addAgentToJury({ ...agent, model: 'gemini-2.5-flash' }); 
                    toggleModal('add-agent-modal');
                });
                resultsContainer.appendChild(item);
            });
        }

        function addAgentToJury(agent) {
            initialJury.push(agent);
            renderJury(initialJury);
        }

        // --- Event Listeners ---
        document.addEventListener('DOMContentLoaded', () => {
            renderJury(initialJury);

            document.getElementById('add-agent-btn').addEventListener('click', () => {
                document.getElementById('agent-search-view').classList.remove('hidden');
                document.getElementById('agent-create-view').classList.add('hidden');
                document.getElementById('agent-search-input').value = '';
                document.getElementById('search-results-container').innerHTML = '<p class="text-center text-gray-500 pt-4">검색어를 입력하세요.</p>';
                toggleModal('add-agent-modal');
            });
            
            document.getElementById('agent-search-btn').addEventListener('click', handleSearch);
            document.getElementById('agent-search-input').addEventListener('keypress', (e) => {
                if (e.key === 'Enter') handleSearch();
            });

            document.getElementById('show-create-view-btn').addEventListener('click', () => {
                document.getElementById('agent-search-view').classList.add('hidden');
                document.getElementById('agent-create-view').classList.remove('hidden');
            });

            document.getElementById('back-to-search-btn').addEventListener('click', () => {
                document.getElementById('agent-create-view').classList.add('hidden');
                document.getElementById('agent-search-view').classList.remove('hidden');
            });
            
            document.getElementById('create-agent-btn').addEventListener('click', () => {
                const newAgent = {
                    name: document.getElementById('new-agent-name').value.trim(),
                    icon: document.getElementById('new-agent-icon').value.trim() || '🤖',
                    role: document.getElementById('new-agent-prompt').value.trim(),
                    model: 'gemini-2.5-flash'
                };
                if (!newAgent.name || !newAgent.role) {
                    alert('전문가 이름과 핵심 역할은 필수입니다.');
                    return;
                }
                addAgentToJury(newAgent);
                toggleModal('add-agent-modal');
            });
            
            document.getElementById('start-debate-btn').addEventListener('click', () => {
                alert("개선된 구성으로 실시간 토론을 시작합니다!");
            });
        });

    </script>
</body>
</html>

